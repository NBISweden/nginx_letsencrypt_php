server {
    listen 80;
    server_name www-new.nbis.se;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }        
}

## uncomment the section below once you have created the ssl certificate with certbot
## $ docker-compose run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ -d example.com
## and change both server name and ssl paths to match your domain name

#server {
#    listen 443 ssl;
#    server_name www-new.nbis.se;
#    server_tokens off;
#    
#    root /www;
#
#    # try to serve file directly, fallback to index.php
#    location / {
#	try_files $uri /index.php$is_args$args;
#    }
#
#    if (!-e $request_filename) {
#        rewrite ^.*$ /index.php last;
#    }
#
#    location ~ \.php$ {
#        fastcgi_pass php-fpm:9000;
#        fastcgi_index index.php;
#        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#        fastcgi_param PHP_VALUE "error_log=/var/log/nginx/application_php_errors.log";
#        fastcgi_buffers 16 16k;
#        fastcgi_buffer_size 32k;
#        include fastcgi_params;
#    }
#
#    ssl_certificate /etc/letsencrypt/live/www-new.nbis.se/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/www-new.nbis.se/privkey.pem;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#}
